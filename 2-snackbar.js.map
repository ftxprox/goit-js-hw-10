{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst formSnackbar = document.querySelector(\".form\");\n\nformSnackbar.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    let delay = parseInt(event.target.delay.value);\n    let state = event.target.state.value;\n\nfunction createPromise(delay, state) {\n    return new Promise((resolve, reject) => {\n    setTimeout(() => {\n        if (state === 'fulfilled') {\n        resolve(delay);\n        } else {\n        reject(delay);\n        }\n    }, delay);\n    });\n}\n\ncreatePromise(delay, state)\n    .then((delay) => {\n    iziToast.success({\n        title: \"Success\",\n        message: `Fulfilled promise in ${delay} ms`,\n        position: \"topRight\",\n        messageColor: \"white\",\n        titleColor: \"white\",\n});\n    })\n    .catch((delay) => {\n    iziToast.error({\n        title: \"Error\",\n        message: `Rejected promise in ${delay} ms`,\n        position: \"topRight\",\n        backgroundColor: \"red\",\n        messageColor: \"white\",\n        titleColor: \"white\",\n    });\n    });\n});"],"names":["formSnackbar","event","delay","state","createPromise","resolve","reject","iziToast"],"mappings":"wIAGA,MAAMA,EAAe,SAAS,cAAc,OAAO,EAEnDA,EAAa,iBAAiB,SAAU,SAAUC,EAAO,CACrDA,EAAM,eAAc,EAEpB,IAAIC,EAAQ,SAASD,EAAM,OAAO,MAAM,KAAK,EACzCE,EAAQF,EAAM,OAAO,MAAM,MAEnC,SAASG,EAAcF,EAAOC,EAAO,CACjC,OAAO,IAAI,QAAQ,CAACE,EAASC,IAAW,CACxC,WAAW,IAAM,CACTH,IAAU,YACdE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAK,CACL,CAEAE,EAAcF,EAAOC,CAAK,EACrB,KAAMD,GAAU,CACjBK,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,wBAAwBL,CAAK,MACtC,SAAU,WACV,aAAc,QACd,WAAY,OACpB,CAAC,CACD,CAAK,EACA,MAAOA,GAAU,CAClBK,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBAAuBL,CAAK,MACrC,SAAU,WACV,gBAAiB,MACjB,aAAc,QACd,WAAY,OACpB,CAAK,CACL,CAAK,CACL,CAAC"}